name: Deploy Quartz site to GitHub Pages

on:
  push:
    branches:
      - v4
  schedule:
    - cron: "10 0 * * *"  # This runs every day at 00:10 UTC

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          submodules: recursive
          submodules-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git checkout ${{ github.ref_name }}

      - name: Update submodules
        run: git submodule update --remote

      - name: Check for changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected in submodules."
            git add .
            git commit -m "Update submodules to latest commit"
            git push origin HEAD:${{ github.ref_name }}
          else
            echo "No changes in submodules."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci

      - name: Ensure Quartz builds, check bundle info
        run: npx quartz build --bundleInfo

      - name: Verify public directory exists
        run: |
          if [ ! -d "public" ]; then
            echo "Error: public directory does not exist. Build failed?"
            exit 1
          fi
          echo "Contents of public directory:"
          ls -la public

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public
          name: github-pages

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
